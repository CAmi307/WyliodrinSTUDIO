const slipEncode=t=>{let e=[];for(let a of t)219==a?e=e.concat([219,221]):192==a?e=e.concat([219,220]):e.push(a);return e},toByteArray=t=>{let e=[];for(let a=0;a<t.length;a++){let i=t.charCodeAt(a);i<=255&&e.push(i)}return e},pack=(t,...e)=>{let a=0;if(t.replace(/[<>]/,"").length!=e.length)throw new Error("Pack format to Argument count mismatch");let i=[],s=!0;const n=(t,e)=>{for(let a=0;a<e;a++)s?i.push(t>>8*a&255):i.push(t>>8*(e-a)&255)};for(let i=0;i<t.length;i++)if("<"==t[i])s=!0;else if(">"==t[i])s=!1;else if("B"==t[i])n(e[a],1),a++;else if("H"==t[i])n(e[a],2),a++;else{if("I"!=t[i])throw new Error(`Unhandled character "${t[i]}" in pack format`);n(e[a],4),a++}return i},unpack=(t,e)=>{let a=0,i=[];for(let s of t)if("B"==s)i.push(255&e[a]),a+=1;else if("H"==s)i.push(255&e[a]|(255&e[a+1])<<8),a+=2;else{if("I"!=s)throw new Error(`Unhandled character "${s}" in unpack format`);i.push(255&e[a]|(255&e[a+1])<<8|(255&e[a+2])<<16|(255&e[a+3])<<24),a+=4}return i},toHex=(t,e=2)=>{let a=t.toString(16).toUpperCase();return a.startsWith("-")?"-0x"+a.substring(1).padStart(e,"0"):"0x"+a.padStart(e,"0")},sleep=t=>new Promise(e=>setTimeout(e,t)),FLASH_SIZES={"512KB":0,"256KB":16,"1MB":32,"2MB":48,"4MB":64,"2MB-c1":80,"4MB-c1":96,"8MB":128,"16MB":144},ESP32_FLASH_SIZES={"1MB":0,"2MB":16,"4MB":32,"8MB":48,"16MB":64,"32MB":25,"64MB":26},FLASH_MODES={qio:0,qout:1,dio:2,dout:3},FLASH_FREQUENCIES={"40m":0,"26m":1,"20m":2,"80m":15},DETECTED_FLASH_SIZES={18:"256KB",19:"512KB",20:"1MB",21:"2MB",22:"4MB",23:"8MB",24:"16MB",25:"32MB",26:"64MB"},getFlashSizes=t=>{switch(t){case CHIP_FAMILY_ESP32:case CHIP_FAMILY_ESP32S2:return ESP32_FLASH_SIZES;case CHIP_FAMILY_ESP8266:return FLASH_SIZES;case CHIP_FAMILY_ESP32C3:return ESP32_FLASH_SIZES;default:return FLASH_SIZES}},FLASH_WRITE_SIZE=1024,STUB_FLASH_WRITE_SIZE=16384,FLASH_SECTOR_SIZE=4096,ESP_ROM_BAUD=115200,ESP32_BOOTLOADER_FLASH_OFFSET=4096,BOOTLOADER_FLASH_OFFSET=0,ESP_IMAGE_MAGIC=233,ESP32_SPI_REG_BASE=1072963584,ESP32_SPI_USR_OFFS=28,ESP32_SPI_USR1_OFFS=32,ESP32_SPI_USR2_OFFS=36,ESP32_SPI_MOSI_DLEN_OFFS=40,ESP32_SPI_MISO_DLEN_OFFS=44,ESP32_SPI_W0_OFFS=128,ESP8266_SPI_REG_BASE=1610613248,ESP8266_SPI_USR_OFFS=28,ESP8266_SPI_USR1_OFFS=32,ESP8266_SPI_USR2_OFFS=36,ESP8266_SPI_MOSI_DLEN_OFFS=-1,ESP8266_SPI_MISO_DLEN_OFFS=-1,ESP8266_SPI_W0_OFFS=64,ESP32C3_SPI_REG_BASE=1610620928,ESP32C3_SPI_USR_OFFS=24,ESP32C3_SPI_USR1_OFFS=28,ESP32C3_SPI_USR2_OFFS=32,ESP32C3_SPI_MOSI_DLEN_OFFS=36,ESP32C3_SPI_MISO_DLEN_OFFS=40,ESP32C3_SPI_W0_OFFS=88,UART_DATE_REG_ADDR=1610612856,SYNC_PACKET=toByteArray(" UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"),CHIP_DETECT_MAGIC_REG_ADDR=1073745920,CHIP_FAMILY_ESP8266=33382,CHIP_FAMILY_ESP32=50,CHIP_FAMILY_ESP32S2=12882,CHIP_FAMILY_ESP32S3=12883,CHIP_FAMILY_ESP32C3=12835,CHIP_FAMILY_ESP32C6=12838,CHIP_FAMILY_ESP32H2=12914,CHIP_DETECT_MAGIC_VALUES={4293968129:{name:"ESP8266",family:CHIP_FAMILY_ESP8266},15736195:{name:"ESP32",family:CHIP_FAMILY_ESP32},1990:{name:"ESP32-S2",family:CHIP_FAMILY_ESP32S2},9:{name:"ESP32-S3",family:12883},3942662454:{name:"ESP32-S3(beta2)",family:12883},1763790959:{name:"ESP32-C3",family:CHIP_FAMILY_ESP32C3},456216687:{name:"ESP32-C3",family:CHIP_FAMILY_ESP32C3},3391540258:{name:"ESP32-H2",family:12914},228687983:{name:"ESP32-C6(beta)",family:12838}},ESP_FLASH_BEGIN=2,ESP_FLASH_DATA=3,ESP_FLASH_END=4,ESP_MEM_BEGIN=5,ESP_MEM_END=6,ESP_MEM_DATA=7,ESP_SYNC=8,ESP_WRITE_REG=9,ESP_READ_REG=10,ESP_ERASE_FLASH=208,ESP_SPI_SET_PARAMS=11,ESP_SPI_ATTACH=13,ESP_CHANGE_BAUDRATE=15,ESP_CHECKSUM_MAGIC=239,ESP_FLASH_DEFL_BEGIN=16,ESP_FLASH_DEFL_DATA=17,ESP_FLASH_DEFL_END=18,ROM_INVALID_RECV_MSG=5,USB_RAM_BLOCK=2048,DEFAULT_TIMEOUT=3e3,CHIP_ERASE_TIMEOUT=6e5,MAX_TIMEOUT=2*CHIP_ERASE_TIMEOUT,SYNC_TIMEOUT=100,ERASE_REGION_TIMEOUT_PER_MB=3e4,MEM_END_ROM_TIMEOUT=50,timeoutPerMb=(t,e)=>{let a=Math.floor(t*(e/486));return a<DEFAULT_TIMEOUT?DEFAULT_TIMEOUT:a},getSpiFlashAddresses=t=>{switch(t){case CHIP_FAMILY_ESP32:case CHIP_FAMILY_ESP32S2:return{regBase:1072963584,usrOffs:28,usr1Offs:32,usr2Offs:36,mosiDlenOffs:40,misoDlenOffs:44,w0Offs:128};case CHIP_FAMILY_ESP8266:return{regBase:1610613248,usrOffs:28,usr1Offs:32,usr2Offs:36,mosiDlenOffs:-1,misoDlenOffs:-1,w0Offs:64};case CHIP_FAMILY_ESP32C3:return{regBase:1610620928,usrOffs:24,usr1Offs:28,usr2Offs:32,mosiDlenOffs:36,misoDlenOffs:40,w0Offs:88};default:return{regBase:-1,usrOffs:-1,usr1Offs:-1,usr2Offs:-1,mosiDlenOffs:-1,misoDlenOffs:-1,w0Offs:-1}}},getUartDateRegAddress=t=>{switch(t){case CHIP_FAMILY_ESP32:case CHIP_FAMILY_ESP32S2:case CHIP_FAMILY_ESP8266:return 1610612856;default:return-1}},getStubCode=async t=>{let e;return t==CHIP_FAMILY_ESP32?e=await import("./esp32-8ce24020.js"):t==CHIP_FAMILY_ESP32S2?e=await import("./esp32s2-a3cfaf84.js"):t==CHIP_FAMILY_ESP8266?e=await import("./esp8266-03e6752c.js"):t==CHIP_FAMILY_ESP32C3&&(e=await import("./esp32c3-a57b2c5e.js")),{...e,text:toByteArray(atob(e.text)),data:toByteArray(atob(e.data))}},Z_FIXED=4,Z_BINARY=0,Z_TEXT=1,Z_UNKNOWN=2;function zero(t){let e=t.length;for(;--e>=0;)t[e]=0}const STORED_BLOCK=0,STATIC_TREES=1,DYN_TREES=2,MIN_MATCH=3,MAX_MATCH=258,LENGTH_CODES=29,LITERALS=256,L_CODES=286,D_CODES=30,BL_CODES=19,HEAP_SIZE=573,MAX_BITS=15,Buf_size=16,MAX_BL_BITS=7,END_BLOCK=256,REP_3_6=16,REPZ_3_10=17,REPZ_11_138=18,extra_lbits=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),extra_dbits=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),extra_blbits=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),bl_order=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),DIST_CODE_LEN=512,static_ltree=new Array(576);zero(static_ltree);const static_dtree=new Array(60);zero(static_dtree);const _dist_code=new Array(512);zero(_dist_code);const _length_code=new Array(256);zero(_length_code);const base_length=new Array(29);zero(base_length);const base_dist=new Array(30);function StaticTreeDesc(t,e,a,i,s){this.static_tree=t,this.extra_bits=e,this.extra_base=a,this.elems=i,this.max_length=s,this.has_stree=t&&t.length}let static_l_desc,static_d_desc,static_bl_desc;function TreeDesc(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}zero(base_dist);const d_code=t=>t<256?_dist_code[t]:_dist_code[256+(t>>>7)],put_short=(t,e)=>{t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255},send_bits=(t,e,a)=>{t.bi_valid>16-a?(t.bi_buf|=e<<t.bi_valid&65535,put_short(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=a-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=a)},send_code=(t,e,a)=>{send_bits(t,a[2*e],a[2*e+1])},bi_reverse=(t,e)=>{let a=0;do{a|=1&t,t>>>=1,a<<=1}while(--e>0);return a>>>1},bi_flush=t=>{16===t.bi_valid?(put_short(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)},gen_bitlen=(t,e)=>{const a=e.dyn_tree,i=e.max_code,s=e.stat_desc.static_tree,n=e.stat_desc.has_stree,r=e.stat_desc.extra_bits,_=e.stat_desc.extra_base,l=e.stat_desc.max_length;let o,h,d,f,c,u,g=0;for(f=0;f<=15;f++)t.bl_count[f]=0;for(a[2*t.heap[t.heap_max]+1]=0,o=t.heap_max+1;o<573;o++)(f=a[2*a[2*(h=t.heap[o])+1]+1]+1)>l&&(f=l,g++),a[2*h+1]=f,h>i||(t.bl_count[f]++,c=0,h>=_&&(c=r[h-_]),u=a[2*h],t.opt_len+=u*(f+c),n&&(t.static_len+=u*(s[2*h+1]+c)));if(0!==g){do{for(f=l-1;0===t.bl_count[f];)f--;t.bl_count[f]--,t.bl_count[f+1]+=2,t.bl_count[l]--,g-=2}while(g>0);for(f=l;0!==f;f--)for(h=t.bl_count[f];0!==h;)(d=t.heap[--o])>i||(a[2*d+1]!==f&&(t.opt_len+=(f-a[2*d+1])*a[2*d],a[2*d+1]=f),h--)}},gen_codes=(t,e,a)=>{const i=new Array(16);let s,n,r=0;for(s=1;s<=15;s++)i[s]=r=r+a[s-1]<<1;for(n=0;n<=e;n++){let e=t[2*n+1];0!==e&&(t[2*n]=bi_reverse(i[e]++,e))}},tr_static_init=()=>{let t,e,a,i,s;const n=new Array(16);for(a=0,i=0;i<28;i++)for(base_length[i]=a,t=0;t<1<<extra_lbits[i];t++)_length_code[a++]=i;for(_length_code[a-1]=i,s=0,i=0;i<16;i++)for(base_dist[i]=s,t=0;t<1<<extra_dbits[i];t++)_dist_code[s++]=i;for(s>>=7;i<30;i++)for(base_dist[i]=s<<7,t=0;t<1<<extra_dbits[i]-7;t++)_dist_code[256+s++]=i;for(e=0;e<=15;e++)n[e]=0;for(t=0;t<=143;)static_ltree[2*t+1]=8,t++,n[8]++;for(;t<=255;)static_ltree[2*t+1]=9,t++,n[9]++;for(;t<=279;)static_ltree[2*t+1]=7,t++,n[7]++;for(;t<=287;)static_ltree[2*t+1]=8,t++,n[8]++;for(gen_codes(static_ltree,287,n),t=0;t<30;t++)static_dtree[2*t+1]=5,static_dtree[2*t]=bi_reverse(t,5);static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,257,286,15),static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,30,15),static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,19,7)},init_block=t=>{let e;for(e=0;e<286;e++)t.dyn_ltree[2*e]=0;for(e=0;e<30;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0},bi_windup=t=>{t.bi_valid>8?put_short(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},copy_block=(t,e,a,i)=>{bi_windup(t),i&&(put_short(t,a),put_short(t,~a)),t.pending_buf.set(t.window.subarray(e,e+a),t.pending),t.pending+=a},smaller=(t,e,a,i)=>{const s=2*e,n=2*a;return t[s]<t[n]||t[s]===t[n]&&i[e]<=i[a]},pqdownheap=(t,e,a)=>{const i=t.heap[a];let s=a<<1;for(;s<=t.heap_len&&(s<t.heap_len&&smaller(e,t.heap[s+1],t.heap[s],t.depth)&&s++,!smaller(e,i,t.heap[s],t.depth));)t.heap[a]=t.heap[s],a=s,s<<=1;t.heap[a]=i},compress_block=(t,e,a)=>{let i,s,n,r,_=0;if(0!==t.last_lit)do{i=t.pending_buf[t.d_buf+2*_]<<8|t.pending_buf[t.d_buf+2*_+1],s=t.pending_buf[t.l_buf+_],_++,0===i?send_code(t,s,e):(n=_length_code[s],send_code(t,n+256+1,e),0!==(r=extra_lbits[n])&&(s-=base_length[n],send_bits(t,s,r)),n=d_code(--i),send_code(t,n,a),0!==(r=extra_dbits[n])&&(i-=base_dist[n],send_bits(t,i,r)))}while(_<t.last_lit);send_code(t,256,e)},build_tree=(t,e)=>{const a=e.dyn_tree,i=e.stat_desc.static_tree,s=e.stat_desc.has_stree,n=e.stat_desc.elems;let r,_,l,o=-1;for(t.heap_len=0,t.heap_max=573,r=0;r<n;r++)0!==a[2*r]?(t.heap[++t.heap_len]=o=r,t.depth[r]=0):a[2*r+1]=0;for(;t.heap_len<2;)a[2*(l=t.heap[++t.heap_len]=o<2?++o:0)]=1,t.depth[l]=0,t.opt_len--,s&&(t.static_len-=i[2*l+1]);for(e.max_code=o,r=t.heap_len>>1;r>=1;r--)pqdownheap(t,a,r);l=n;do{r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],pqdownheap(t,a,1),_=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=_,a[2*l]=a[2*r]+a[2*_],t.depth[l]=(t.depth[r]>=t.depth[_]?t.depth[r]:t.depth[_])+1,a[2*r+1]=a[2*_+1]=l,t.heap[1]=l++,pqdownheap(t,a,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],gen_bitlen(t,e),gen_codes(a,o,t.bl_count)},scan_tree=(t,e,a)=>{let i,s,n=-1,r=e[1],_=0,l=7,o=4;for(0===r&&(l=138,o=3),e[2*(a+1)+1]=65535,i=0;i<=a;i++)s=r,r=e[2*(i+1)+1],++_<l&&s===r||(_<o?t.bl_tree[2*s]+=_:0!==s?(s!==n&&t.bl_tree[2*s]++,t.bl_tree[32]++):_<=10?t.bl_tree[34]++:t.bl_tree[36]++,_=0,n=s,0===r?(l=138,o=3):s===r?(l=6,o=3):(l=7,o=4))},send_tree=(t,e,a)=>{let i,s,n=-1,r=e[1],_=0,l=7,o=4;for(0===r&&(l=138,o=3),i=0;i<=a;i++)if(s=r,r=e[2*(i+1)+1],!(++_<l&&s===r)){if(_<o)do{send_code(t,s,t.bl_tree)}while(0!=--_);else 0!==s?(s!==n&&(send_code(t,s,t.bl_tree),_--),send_code(t,16,t.bl_tree),send_bits(t,_-3,2)):_<=10?(send_code(t,17,t.bl_tree),send_bits(t,_-3,3)):(send_code(t,18,t.bl_tree),send_bits(t,_-11,7));_=0,n=s,0===r?(l=138,o=3):s===r?(l=6,o=3):(l=7,o=4)}},build_bl_tree=t=>{let e;for(scan_tree(t,t.dyn_ltree,t.l_desc.max_code),scan_tree(t,t.dyn_dtree,t.d_desc.max_code),build_tree(t,t.bl_desc),e=18;e>=3&&0===t.bl_tree[2*bl_order[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e},send_all_trees=(t,e,a,i)=>{let s;for(send_bits(t,e-257,5),send_bits(t,a-1,5),send_bits(t,i-4,4),s=0;s<i;s++)send_bits(t,t.bl_tree[2*bl_order[s]+1],3);send_tree(t,t.dyn_ltree,e-1),send_tree(t,t.dyn_dtree,a-1)},detect_data_type=t=>{let e,a=4093624447;for(e=0;e<=31;e++,a>>>=1)if(1&a&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<256;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0};let static_init_done=!1;const _tr_init=t=>{static_init_done||(tr_static_init(),static_init_done=!0),t.l_desc=new TreeDesc(t.dyn_ltree,static_l_desc),t.d_desc=new TreeDesc(t.dyn_dtree,static_d_desc),t.bl_desc=new TreeDesc(t.bl_tree,static_bl_desc),t.bi_buf=0,t.bi_valid=0,init_block(t)},_tr_stored_block=(t,e,a,i)=>{send_bits(t,0+(i?1:0),3),copy_block(t,e,a,!0)},_tr_align=t=>{send_bits(t,2,3),send_code(t,256,static_ltree),bi_flush(t)},_tr_flush_block=(t,e,a,i)=>{let s,n,r=0;t.level>0?(2===t.strm.data_type&&(t.strm.data_type=detect_data_type(t)),build_tree(t,t.l_desc),build_tree(t,t.d_desc),r=build_bl_tree(t),s=t.opt_len+3+7>>>3,(n=t.static_len+3+7>>>3)<=s&&(s=n)):s=n=a+5,a+4<=s&&-1!==e?_tr_stored_block(t,e,a,i):4===t.strategy||n===s?(send_bits(t,2+(i?1:0),3),compress_block(t,static_ltree,static_dtree)):(send_bits(t,4+(i?1:0),3),send_all_trees(t,t.l_desc.max_code+1,t.d_desc.max_code+1,r+1),compress_block(t,t.dyn_ltree,t.dyn_dtree)),init_block(t),i&&bi_windup(t)},_tr_tally=(t,e,a)=>(t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&a,t.last_lit++,0===e?t.dyn_ltree[2*a]++:(t.matches++,e--,t.dyn_ltree[2*(_length_code[a]+256+1)]++,t.dyn_dtree[2*d_code(e)]++),t.last_lit===t.lit_bufsize-1);var _tr_init_1=_tr_init,_tr_stored_block_1=_tr_stored_block,_tr_flush_block_1=_tr_flush_block,_tr_tally_1=_tr_tally,_tr_align_1=_tr_align,trees={_tr_init:_tr_init_1,_tr_stored_block:_tr_stored_block_1,_tr_flush_block:_tr_flush_block_1,_tr_tally:_tr_tally_1,_tr_align:_tr_align_1};const adler32=(t,e,a,i)=>{let s=65535&t|0,n=t>>>16&65535|0,r=0;for(;0!==a;){a-=r=a>2e3?2e3:a;do{n=n+(s=s+e[i++]|0)|0}while(--r);s%=65521,n%=65521}return s|n<<16|0};var adler32_1=adler32;const makeTable=()=>{let t,e=[];for(var a=0;a<256;a++){t=a;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[a]=t}return e},crcTable=new Uint32Array(makeTable()),crc32=(t,e,a,i)=>{const s=crcTable,n=i+a;t^=-1;for(let a=i;a<n;a++)t=t>>>8^s[255&(t^e[a])];return-1^t};var crc32_1=crc32,messages={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},constants={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:_tr_init$1,_tr_stored_block:_tr_stored_block$1,_tr_flush_block:_tr_flush_block$1,_tr_tally:_tr_tally$1,_tr_align:_tr_align$1}=trees,{Z_NO_FLUSH:Z_NO_FLUSH,Z_PARTIAL_FLUSH:Z_PARTIAL_FLUSH,Z_FULL_FLUSH:Z_FULL_FLUSH,Z_FINISH:Z_FINISH,Z_BLOCK:Z_BLOCK,Z_OK:Z_OK,Z_STREAM_END:Z_STREAM_END,Z_STREAM_ERROR:Z_STREAM_ERROR,Z_DATA_ERROR:Z_DATA_ERROR,Z_BUF_ERROR:Z_BUF_ERROR,Z_DEFAULT_COMPRESSION:Z_DEFAULT_COMPRESSION,Z_FILTERED:Z_FILTERED,Z_HUFFMAN_ONLY:Z_HUFFMAN_ONLY,Z_RLE:Z_RLE,Z_FIXED:Z_FIXED$1,Z_DEFAULT_STRATEGY:Z_DEFAULT_STRATEGY,Z_UNKNOWN:Z_UNKNOWN$1,Z_DEFLATED:Z_DEFLATED}=constants,MAX_MEM_LEVEL=9,MAX_WBITS=15,DEF_MEM_LEVEL=8,LENGTH_CODES$1=29,LITERALS$1=256,L_CODES$1=286,D_CODES$1=30,BL_CODES$1=19,HEAP_SIZE$1=2*L_CODES$1+1,MAX_BITS$1=15,MIN_MATCH$1=3,MAX_MATCH$1=258,MIN_LOOKAHEAD=262,PRESET_DICT=32,INIT_STATE=42,EXTRA_STATE=69,NAME_STATE=73,COMMENT_STATE=91,HCRC_STATE=103,BUSY_STATE=113,FINISH_STATE=666,BS_NEED_MORE=1,BS_BLOCK_DONE=2,BS_FINISH_STARTED=3,BS_FINISH_DONE=4,OS_CODE=3,err=(t,e)=>(t.msg=messages[e],e),rank=t=>(t<<1)-(t>4?9:0),zero$1=t=>{let e=t.length;for(;--e>=0;)t[e]=0};let HASH_ZLIB=(t,e,a)=>(e<<t.hash_shift^a)&t.hash_mask,HASH=HASH_ZLIB;const flush_pending=t=>{const e=t.state;let a=e.pending;a>t.avail_out&&(a=t.avail_out),0!==a&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+a),t.next_out),t.next_out+=a,e.pending_out+=a,t.total_out+=a,t.avail_out-=a,e.pending-=a,0===e.pending&&(e.pending_out=0))},flush_block_only=(t,e)=>{_tr_flush_block$1(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,flush_pending(t.strm)},put_byte=(t,e)=>{t.pending_buf[t.pending++]=e},putShortMSB=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e},read_buf=(t,e,a,i)=>{let s=t.avail_in;return s>i&&(s=i),0===s?0:(t.avail_in-=s,e.set(t.input.subarray(t.next_in,t.next_in+s),a),1===t.state.wrap?t.adler=adler32_1(t.adler,e,s,a):2===t.state.wrap&&(t.adler=crc32_1(t.adler,e,s,a)),t.next_in+=s,t.total_in+=s,s)},longest_match=(t,e)=>{let a,i,s=t.max_chain_length,n=t.strstart,r=t.prev_length,_=t.nice_match;const l=t.strstart>t.w_size-262?t.strstart-(t.w_size-262):0,o=t.window,h=t.w_mask,d=t.prev,f=t.strstart+258;let c=o[n+r-1],u=o[n+r];t.prev_length>=t.good_match&&(s>>=2),_>t.lookahead&&(_=t.lookahead);do{if(o[(a=e)+r]===u&&o[a+r-1]===c&&o[a]===o[n]&&o[++a]===o[n+1]){n+=2,a++;do{}while(o[++n]===o[++a]&&o[++n]===o[++a]&&o[++n]===o[++a]&&o[++n]===o[++a]&&o[++n]===o[++a]&&o[++n]===o[++a]&&o[++n]===o[++a]&&o[++n]===o[++a]&&n<f);if(i=258-(f-n),n=f-258,i>r){if(t.match_start=e,r=i,i>=_)break;c=o[n+r-1],u=o[n+r]}}}while((e=d[e&h])>l&&0!=--s);return r<=t.lookahead?r:t.lookahead},fill_window=t=>{const e=t.w_size;let a,i,s,n,r;do{if(n=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-262)){t.window.set(t.window.subarray(e,e+e),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,a=i=t.hash_size;do{s=t.head[--a],t.head[a]=s>=e?s-e:0}while(--i);a=i=e;do{s=t.prev[--a],t.prev[a]=s>=e?s-e:0}while(--i);n+=e}if(0===t.strm.avail_in)break;if(i=read_buf(t.strm,t.window,t.strstart+t.lookahead,n),t.lookahead+=i,t.lookahead+t.insert>=3)for(r=t.strstart-t.insert,t.ins_h=t.window[r],t.ins_h=HASH(t,t.ins_h,t.window[r+1]);t.insert&&(t.ins_h=HASH(t,t.ins_h,t.window[r+3-1]),t.prev[r&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=r,r++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<262&&0!==t.strm.avail_in)},deflate_stored=(t,e)=>{let a=65535;for(a>t.pending_buf_size-5&&(a=t.pending_buf_size-5);;){if(t.lookahead<=1){if(fill_window(t),0===t.lookahead&&e===Z_NO_FLUSH)return 1;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;const i=t.block_start+a;if((0===t.strstart||t.strstart>=i)&&(t.lookahead=t.strstart-i,t.strstart=i,flush_block_only(t,!1),0===t.strm.avail_out))return 1;if(t.strstart-t.block_start>=t.w_size-262&&(flush_block_only(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===Z_FINISH?(flush_block_only(t,!0),0===t.strm.avail_out?3:4):(t.strstart>t.block_start&&(flush_block_only(t,!1),t.strm.avail_out),1)},deflate_fast=(t,e)=>{let a,i;for(;;){if(t.lookahead<262){if(fill_window(t),t.lookahead<262&&e===Z_NO_FLUSH)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==a&&t.strstart-a<=t.w_size-262&&(t.match_length=longest_match(t,a)),t.match_length>=3)if(i=_tr_tally$1(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){t.match_length--;do{t.strstart++,t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+1]);else i=_tr_tally$1(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(flush_block_only(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,e===Z_FINISH?(flush_block_only(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(flush_block_only(t,!1),0===t.strm.avail_out)?1:2},deflate_slow=(t,e)=>{let a,i,s;for(;;){if(t.lookahead<262){if(fill_window(t),t.lookahead<262&&e===Z_NO_FLUSH)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==a&&t.prev_length<t.max_lazy_match&&t.strstart-a<=t.w_size-262&&(t.match_length=longest_match(t,a),t.match_length<=5&&(t.strategy===Z_FILTERED||3===t.match_length&&t.strstart-t.match_start>4096)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){s=t.strstart+t.lookahead-3,i=_tr_tally$1(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=s&&(t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=2,t.strstart++,i&&(flush_block_only(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if((i=_tr_tally$1(t,0,t.window[t.strstart-1]))&&flush_block_only(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=_tr_tally$1(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,e===Z_FINISH?(flush_block_only(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(flush_block_only(t,!1),0===t.strm.avail_out)?1:2},deflate_rle=(t,e)=>{let a,i,s,n;const r=t.window;for(;;){if(t.lookahead<=258){if(fill_window(t),t.lookahead<=258&&e===Z_NO_FLUSH)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&t.strstart>0&&(i=r[s=t.strstart-1])===r[++s]&&i===r[++s]&&i===r[++s]){n=t.strstart+258;do{}while(i===r[++s]&&i===r[++s]&&i===r[++s]&&i===r[++s]&&i===r[++s]&&i===r[++s]&&i===r[++s]&&i===r[++s]&&s<n);t.match_length=258-(n-s),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(a=_tr_tally$1(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(a=_tr_tally$1(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),a&&(flush_block_only(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===Z_FINISH?(flush_block_only(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(flush_block_only(t,!1),0===t.strm.avail_out)?1:2},deflate_huff=(t,e)=>{let a;for(;;){if(0===t.lookahead&&(fill_window(t),0===t.lookahead)){if(e===Z_NO_FLUSH)return 1;break}if(t.match_length=0,a=_tr_tally$1(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,a&&(flush_block_only(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===Z_FINISH?(flush_block_only(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(flush_block_only(t,!1),0===t.strm.avail_out)?1:2};function Config(t,e,a,i,s){this.good_length=t,this.max_lazy=e,this.nice_length=a,this.max_chain=i,this.func=s}const configuration_table=[new Config(0,0,0,0,deflate_stored),new Config(4,4,8,4,deflate_fast),new Config(4,5,16,8,deflate_fast),new Config(4,6,32,32,deflate_fast),new Config(4,4,16,16,deflate_slow),new Config(8,16,32,32,deflate_slow),new Config(8,16,128,128,deflate_slow),new Config(8,32,128,256,deflate_slow),new Config(32,128,258,1024,deflate_slow),new Config(32,258,258,4096,deflate_slow)],lm_init=t=>{t.window_size=2*t.w_size,zero$1(t.head),t.max_lazy_match=configuration_table[t.level].max_lazy,t.good_match=configuration_table[t.level].good_length,t.nice_match=configuration_table[t.level].nice_length,t.max_chain_length=configuration_table[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=2,t.match_available=0,t.ins_h=0};function DeflateState(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Z_DEFLATED,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(2*HEAP_SIZE$1),this.dyn_dtree=new Uint16Array(2*(2*D_CODES$1+1)),this.bl_tree=new Uint16Array(2*(2*BL_CODES$1+1)),zero$1(this.dyn_ltree),zero$1(this.dyn_dtree),zero$1(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(MAX_BITS$1+1),this.heap=new Uint16Array(2*L_CODES$1+1),zero$1(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(2*L_CODES$1+1),zero$1(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const deflateResetKeep=t=>{if(!t||!t.state)return err(t,Z_STREAM_ERROR);t.total_in=t.total_out=0,t.data_type=Z_UNKNOWN$1;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?42:113,t.adler=2===e.wrap?0:1,e.last_flush=Z_NO_FLUSH,_tr_init$1(e),Z_OK},deflateReset=t=>{const e=deflateResetKeep(t);return e===Z_OK&&lm_init(t.state),e},deflateSetHeader=(t,e)=>t&&t.state?2!==t.state.wrap?Z_STREAM_ERROR:(t.state.gzhead=e,Z_OK):Z_STREAM_ERROR,deflateInit2=(t,e,a,i,s,n)=>{if(!t)return Z_STREAM_ERROR;let r=1;if(e===Z_DEFAULT_COMPRESSION&&(e=6),i<0?(r=0,i=-i):i>15&&(r=2,i-=16),s<1||s>9||a!==Z_DEFLATED||i<8||i>15||e<0||e>9||n<0||n>Z_FIXED$1)return err(t,Z_STREAM_ERROR);8===i&&(i=9);const _=new DeflateState;return t.state=_,_.strm=t,_.wrap=r,_.gzhead=null,_.w_bits=i,_.w_size=1<<_.w_bits,_.w_mask=_.w_size-1,_.hash_bits=s+7,_.hash_size=1<<_.hash_bits,_.hash_mask=_.hash_size-1,_.hash_shift=~~((_.hash_bits+3-1)/3),_.window=new Uint8Array(2*_.w_size),_.head=new Uint16Array(_.hash_size),_.prev=new Uint16Array(_.w_size),_.lit_bufsize=1<<s+6,_.pending_buf_size=4*_.lit_bufsize,_.pending_buf=new Uint8Array(_.pending_buf_size),_.d_buf=1*_.lit_bufsize,_.l_buf=3*_.lit_bufsize,_.level=e,_.strategy=n,_.method=a,deflateReset(t)},deflateInit=(t,e)=>deflateInit2(t,e,Z_DEFLATED,15,8,Z_DEFAULT_STRATEGY),deflate=(t,e)=>{let a,i;if(!t||!t.state||e>Z_BLOCK||e<0)return t?err(t,Z_STREAM_ERROR):Z_STREAM_ERROR;const s=t.state;if(!t.output||!t.input&&0!==t.avail_in||666===s.status&&e!==Z_FINISH)return err(t,0===t.avail_out?Z_BUF_ERROR:Z_STREAM_ERROR);s.strm=t;const n=s.last_flush;if(s.last_flush=e,42===s.status)if(2===s.wrap)t.adler=0,put_byte(s,31),put_byte(s,139),put_byte(s,8),s.gzhead?(put_byte(s,(s.gzhead.text?1:0)+(s.gzhead.hcrc?2:0)+(s.gzhead.extra?4:0)+(s.gzhead.name?8:0)+(s.gzhead.comment?16:0)),put_byte(s,255&s.gzhead.time),put_byte(s,s.gzhead.time>>8&255),put_byte(s,s.gzhead.time>>16&255),put_byte(s,s.gzhead.time>>24&255),put_byte(s,9===s.level?2:s.strategy>=Z_HUFFMAN_ONLY||s.level<2?4:0),put_byte(s,255&s.gzhead.os),s.gzhead.extra&&s.gzhead.extra.length&&(put_byte(s,255&s.gzhead.extra.length),put_byte(s,s.gzhead.extra.length>>8&255)),s.gzhead.hcrc&&(t.adler=crc32_1(t.adler,s.pending_buf,s.pending,0)),s.gzindex=0,s.status=69):(put_byte(s,0),put_byte(s,0),put_byte(s,0),put_byte(s,0),put_byte(s,0),put_byte(s,9===s.level?2:s.strategy>=Z_HUFFMAN_ONLY||s.level<2?4:0),put_byte(s,3),s.status=113);else{let e=Z_DEFLATED+(s.w_bits-8<<4)<<8,a=-1;e|=(a=s.strategy>=Z_HUFFMAN_ONLY||s.level<2?0:s.level<6?1:6===s.level?2:3)<<6,0!==s.strstart&&(e|=32),e+=31-e%31,s.status=113,putShortMSB(s,e),0!==s.strstart&&(putShortMSB(s,t.adler>>>16),putShortMSB(s,65535&t.adler)),t.adler=1}if(69===s.status)if(s.gzhead.extra){for(a=s.pending;s.gzindex<(65535&s.gzhead.extra.length)&&(s.pending!==s.pending_buf_size||(s.gzhead.hcrc&&s.pending>a&&(t.adler=crc32_1(t.adler,s.pending_buf,s.pending-a,a)),flush_pending(t),a=s.pending,s.pending!==s.pending_buf_size));)put_byte(s,255&s.gzhead.extra[s.gzindex]),s.gzindex++;s.gzhead.hcrc&&s.pending>a&&(t.adler=crc32_1(t.adler,s.pending_buf,s.pending-a,a)),s.gzindex===s.gzhead.extra.length&&(s.gzindex=0,s.status=73)}else s.status=73;if(73===s.status)if(s.gzhead.name){a=s.pending;do{if(s.pending===s.pending_buf_size&&(s.gzhead.hcrc&&s.pending>a&&(t.adler=crc32_1(t.adler,s.pending_buf,s.pending-a,a)),flush_pending(t),a=s.pending,s.pending===s.pending_buf_size)){i=1;break}i=s.gzindex<s.gzhead.name.length?255&s.gzhead.name.charCodeAt(s.gzindex++):0,put_byte(s,i)}while(0!==i);s.gzhead.hcrc&&s.pending>a&&(t.adler=crc32_1(t.adler,s.pending_buf,s.pending-a,a)),0===i&&(s.gzindex=0,s.status=91)}else s.status=91;if(91===s.status)if(s.gzhead.comment){a=s.pending;do{if(s.pending===s.pending_buf_size&&(s.gzhead.hcrc&&s.pending>a&&(t.adler=crc32_1(t.adler,s.pending_buf,s.pending-a,a)),flush_pending(t),a=s.pending,s.pending===s.pending_buf_size)){i=1;break}i=s.gzindex<s.gzhead.comment.length?255&s.gzhead.comment.charCodeAt(s.gzindex++):0,put_byte(s,i)}while(0!==i);s.gzhead.hcrc&&s.pending>a&&(t.adler=crc32_1(t.adler,s.pending_buf,s.pending-a,a)),0===i&&(s.status=103)}else s.status=103;if(103===s.status&&(s.gzhead.hcrc?(s.pending+2>s.pending_buf_size&&flush_pending(t),s.pending+2<=s.pending_buf_size&&(put_byte(s,255&t.adler),put_byte(s,t.adler>>8&255),t.adler=0,s.status=113)):s.status=113),0!==s.pending){if(flush_pending(t),0===t.avail_out)return s.last_flush=-1,Z_OK}else if(0===t.avail_in&&rank(e)<=rank(n)&&e!==Z_FINISH)return err(t,Z_BUF_ERROR);if(666===s.status&&0!==t.avail_in)return err(t,Z_BUF_ERROR);if(0!==t.avail_in||0!==s.lookahead||e!==Z_NO_FLUSH&&666!==s.status){let a=s.strategy===Z_HUFFMAN_ONLY?deflate_huff(s,e):s.strategy===Z_RLE?deflate_rle(s,e):configuration_table[s.level].func(s,e);if(3!==a&&4!==a||(s.status=666),1===a||3===a)return 0===t.avail_out&&(s.last_flush=-1),Z_OK;if(2===a&&(e===Z_PARTIAL_FLUSH?_tr_align$1(s):e!==Z_BLOCK&&(_tr_stored_block$1(s,0,0,!1),e===Z_FULL_FLUSH&&(zero$1(s.head),0===s.lookahead&&(s.strstart=0,s.block_start=0,s.insert=0))),flush_pending(t),0===t.avail_out))return s.last_flush=-1,Z_OK}return e!==Z_FINISH?Z_OK:s.wrap<=0?Z_STREAM_END:(2===s.wrap?(put_byte(s,255&t.adler),put_byte(s,t.adler>>8&255),put_byte(s,t.adler>>16&255),put_byte(s,t.adler>>24&255),put_byte(s,255&t.total_in),put_byte(s,t.total_in>>8&255),put_byte(s,t.total_in>>16&255),put_byte(s,t.total_in>>24&255)):(putShortMSB(s,t.adler>>>16),putShortMSB(s,65535&t.adler)),flush_pending(t),s.wrap>0&&(s.wrap=-s.wrap),0!==s.pending?Z_OK:Z_STREAM_END)},deflateEnd=t=>{if(!t||!t.state)return Z_STREAM_ERROR;const e=t.state.status;return 42!==e&&69!==e&&73!==e&&91!==e&&103!==e&&113!==e&&666!==e?err(t,Z_STREAM_ERROR):(t.state=null,113===e?err(t,Z_DATA_ERROR):Z_OK)},deflateSetDictionary=(t,e)=>{let a=e.length;if(!t||!t.state)return Z_STREAM_ERROR;const i=t.state,s=i.wrap;if(2===s||1===s&&42!==i.status||i.lookahead)return Z_STREAM_ERROR;if(1===s&&(t.adler=adler32_1(t.adler,e,a,0)),i.wrap=0,a>=i.w_size){0===s&&(zero$1(i.head),i.strstart=0,i.block_start=0,i.insert=0);let t=new Uint8Array(i.w_size);t.set(e.subarray(a-i.w_size,a),0),e=t,a=i.w_size}const n=t.avail_in,r=t.next_in,_=t.input;for(t.avail_in=a,t.next_in=0,t.input=e,fill_window(i);i.lookahead>=3;){let t=i.strstart,e=i.lookahead-2;do{i.ins_h=HASH(i,i.ins_h,i.window[t+3-1]),i.prev[t&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=t,t++}while(--e);i.strstart=t,i.lookahead=2,fill_window(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,t.next_in=r,t.input=_,t.avail_in=n,i.wrap=s,Z_OK};var deflateInit_1=deflateInit,deflateInit2_1=deflateInit2,deflateReset_1=deflateReset,deflateResetKeep_1=deflateResetKeep,deflateSetHeader_1=deflateSetHeader,deflate_2=deflate,deflateEnd_1=deflateEnd,deflateSetDictionary_1=deflateSetDictionary,deflateInfo="pako deflate (from Nodeca project)",deflate_1={deflateInit:deflateInit_1,deflateInit2:deflateInit2_1,deflateReset:deflateReset_1,deflateResetKeep:deflateResetKeep_1,deflateSetHeader:deflateSetHeader_1,deflate:deflate_2,deflateEnd:deflateEnd_1,deflateSetDictionary:deflateSetDictionary_1,deflateInfo:deflateInfo};const _has=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var assign=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const a=e.shift();if(a){if("object"!=typeof a)throw new TypeError(a+"must be non-object");for(const e in a)_has(a,e)&&(t[e]=a[e])}}return t},flattenChunks=t=>{let e=0;for(let a=0,i=t.length;a<i;a++)e+=t[a].length;const a=new Uint8Array(e);for(let e=0,i=0,s=t.length;e<s;e++){let s=t[e];a.set(s,i),i+=s.length}return a},common={assign:assign,flattenChunks:flattenChunks};let STR_APPLY_UIA_OK=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){STR_APPLY_UIA_OK=!1}const _utf8len=new Uint8Array(256);for(let t=0;t<256;t++)_utf8len[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;_utf8len[254]=_utf8len[254]=1;var string2buf=t=>{let e,a,i,s,n,r=t.length,_=0;for(s=0;s<r;s++)55296==(64512&(a=t.charCodeAt(s)))&&s+1<r&&56320==(64512&(i=t.charCodeAt(s+1)))&&(a=65536+(a-55296<<10)+(i-56320),s++),_+=a<128?1:a<2048?2:a<65536?3:4;for(e=new Uint8Array(_),n=0,s=0;n<_;s++)55296==(64512&(a=t.charCodeAt(s)))&&s+1<r&&56320==(64512&(i=t.charCodeAt(s+1)))&&(a=65536+(a-55296<<10)+(i-56320),s++),a<128?e[n++]=a:a<2048?(e[n++]=192|a>>>6,e[n++]=128|63&a):a<65536?(e[n++]=224|a>>>12,e[n++]=128|a>>>6&63,e[n++]=128|63&a):(e[n++]=240|a>>>18,e[n++]=128|a>>>12&63,e[n++]=128|a>>>6&63,e[n++]=128|63&a);return e};const buf2binstring=(t,e)=>{if(e<65534&&t.subarray&&STR_APPLY_UIA_OK)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let a="";for(let i=0;i<e;i++)a+=String.fromCharCode(t[i]);return a};var buf2string=(t,e)=>{let a,i;const s=e||t.length,n=new Array(2*s);for(i=0,a=0;a<s;){let e=t[a++];if(e<128){n[i++]=e;continue}let r=_utf8len[e];if(r>4)n[i++]=65533,a+=r-1;else{for(e&=2===r?31:3===r?15:7;r>1&&a<s;)e=e<<6|63&t[a++],r--;r>1?n[i++]=65533:e<65536?n[i++]=e:(e-=65536,n[i++]=55296|e>>10&1023,n[i++]=56320|1023&e)}}return buf2binstring(n,i)},utf8border=(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let a=e-1;for(;a>=0&&128==(192&t[a]);)a--;return a<0?e:0===a?e:a+_utf8len[t[a]]>e?a:e},strings={string2buf:string2buf,buf2string:buf2string,utf8border:utf8border};function ZStream(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var zstream=ZStream;const toString=Object.prototype.toString,{Z_NO_FLUSH:Z_NO_FLUSH$1,Z_SYNC_FLUSH:Z_SYNC_FLUSH,Z_FULL_FLUSH:Z_FULL_FLUSH$1,Z_FINISH:Z_FINISH$1,Z_OK:Z_OK$1,Z_STREAM_END:Z_STREAM_END$1,Z_DEFAULT_COMPRESSION:Z_DEFAULT_COMPRESSION$1,Z_DEFAULT_STRATEGY:Z_DEFAULT_STRATEGY$1,Z_DEFLATED:Z_DEFLATED$1}=constants;function Deflate(t){this.options=common.assign({level:Z_DEFAULT_COMPRESSION$1,method:Z_DEFLATED$1,chunkSize:16384,windowBits:15,memLevel:8,strategy:Z_DEFAULT_STRATEGY$1},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let a=deflate_1.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(a!==Z_OK$1)throw new Error(messages[a]);if(e.header&&deflate_1.deflateSetHeader(this.strm,e.header),e.dictionary){let t;if(t="string"==typeof e.dictionary?strings.string2buf(e.dictionary):"[object ArrayBuffer]"===toString.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,(a=deflate_1.deflateSetDictionary(this.strm,t))!==Z_OK$1)throw new Error(messages[a]);this._dict_set=!0}}function deflate$1(t,e){const a=new Deflate(e);if(a.push(t,!0),a.err)throw a.msg||messages[a.err];return a.result}function deflateRaw(t,e){return(e=e||{}).raw=!0,deflate$1(t,e)}function gzip(t,e){return(e=e||{}).gzip=!0,deflate$1(t,e)}Deflate.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize;let s,n;if(this.ended)return!1;for(n=e===~~e?e:!0===e?Z_FINISH$1:Z_NO_FLUSH$1,"string"==typeof t?a.input=strings.string2buf(t):"[object ArrayBuffer]"===toString.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;)if(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),(n===Z_SYNC_FLUSH||n===Z_FULL_FLUSH$1)&&a.avail_out<=6)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else{if((s=deflate_1.deflate(a,n))===Z_STREAM_END$1)return a.next_out>0&&this.onData(a.output.subarray(0,a.next_out)),s=deflate_1.deflateEnd(this.strm),this.onEnd(s),this.ended=!0,s===Z_OK$1;if(0!==a.avail_out){if(n>0&&a.next_out>0)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else if(0===a.avail_in)break}else this.onData(a.output)}return!0},Deflate.prototype.onData=function(t){this.chunks.push(t)},Deflate.prototype.onEnd=function(t){t===Z_OK$1&&(this.result=common.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Deflate_1=Deflate,deflate_2$1=deflate$1,deflateRaw_1=deflateRaw,gzip_1=gzip,constants$1=constants,deflate_1$1={Deflate:Deflate_1,deflate:deflate_2$1,deflateRaw:deflateRaw_1,gzip:gzip_1,constants:constants$1};const BAD=30,TYPE=12;var inffast=function(t,e){let a,i,s,n,r,_,l,o,h,d,f,c,u,g,E,S,b,w,p,m,A,I,R,y;const k=t.state;a=t.next_in,R=t.input,i=a+(t.avail_in-5),s=t.next_out,y=t.output,n=s-(e-t.avail_out),r=s+(t.avail_out-257),_=k.dmax,l=k.wsize,o=k.whave,h=k.wnext,d=k.window,f=k.hold,c=k.bits,u=k.lencode,g=k.distcode,E=(1<<k.lenbits)-1,S=(1<<k.distbits)-1;t:do{c<15&&(f+=R[a++]<<c,c+=8,f+=R[a++]<<c,c+=8),b=u[f&E];e:for(;;){if(f>>>=w=b>>>24,c-=w,0===(w=b>>>16&255))y[s++]=65535&b;else{if(!(16&w)){if(0==(64&w)){b=u[(65535&b)+(f&(1<<w)-1)];continue e}if(32&w){k.mode=12;break t}t.msg="invalid literal/length code",k.mode=30;break t}p=65535&b,(w&=15)&&(c<w&&(f+=R[a++]<<c,c+=8),p+=f&(1<<w)-1,f>>>=w,c-=w),c<15&&(f+=R[a++]<<c,c+=8,f+=R[a++]<<c,c+=8),b=g[f&S];a:for(;;){if(f>>>=w=b>>>24,c-=w,!(16&(w=b>>>16&255))){if(0==(64&w)){b=g[(65535&b)+(f&(1<<w)-1)];continue a}t.msg="invalid distance code",k.mode=30;break t}if(m=65535&b,c<(w&=15)&&(f+=R[a++]<<c,(c+=8)<w&&(f+=R[a++]<<c,c+=8)),(m+=f&(1<<w)-1)>_){t.msg="invalid distance too far back",k.mode=30;break t}if(f>>>=w,c-=w,m>(w=s-n)){if((w=m-w)>o&&k.sane){t.msg="invalid distance too far back",k.mode=30;break t}if(A=0,I=d,0===h){if(A+=l-w,w<p){p-=w;do{y[s++]=d[A++]}while(--w);A=s-m,I=y}}else if(h<w){if(A+=l+h-w,(w-=h)<p){p-=w;do{y[s++]=d[A++]}while(--w);if(A=0,h<p){p-=w=h;do{y[s++]=d[A++]}while(--w);A=s-m,I=y}}}else if(A+=h-w,w<p){p-=w;do{y[s++]=d[A++]}while(--w);A=s-m,I=y}for(;p>2;)y[s++]=I[A++],y[s++]=I[A++],y[s++]=I[A++],p-=3;p&&(y[s++]=I[A++],p>1&&(y[s++]=I[A++]))}else{A=s-m;do{y[s++]=y[A++],y[s++]=y[A++],y[s++]=y[A++],p-=3}while(p>2);p&&(y[s++]=y[A++],p>1&&(y[s++]=y[A++]))}break}}break}}while(a<i&&s<r);a-=p=c>>3,f&=(1<<(c-=p<<3))-1,t.next_in=a,t.next_out=s,t.avail_in=a<i?i-a+5:5-(a-i),t.avail_out=s<r?r-s+257:257-(s-r),k.hold=f,k.bits=c};const MAXBITS=15,ENOUGH_LENS=852,ENOUGH_DISTS=592,CODES=0,LENS=1,DISTS=2,lbase=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),lext=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dbase=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),dext=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),inflate_table=(t,e,a,i,s,n,r,_)=>{const l=_.bits;let o,h,d,f,c,u,g=0,E=0,S=0,b=0,w=0,p=0,m=0,A=0,I=0,R=0,y=null,k=0;const T=new Uint16Array(16),F=new Uint16Array(16);let O,D,M,L=null,Z=0;for(g=0;g<=15;g++)T[g]=0;for(E=0;E<i;E++)T[e[a+E]]++;for(w=l,b=15;b>=1&&0===T[b];b--);if(w>b&&(w=b),0===b)return s[n++]=20971520,s[n++]=20971520,_.bits=1,0;for(S=1;S<b&&0===T[S];S++);for(w<S&&(w=S),A=1,g=1;g<=15;g++)if(A<<=1,(A-=T[g])<0)return-1;if(A>0&&(0===t||1!==b))return-1;for(F[1]=0,g=1;g<15;g++)F[g+1]=F[g]+T[g];for(E=0;E<i;E++)0!==e[a+E]&&(r[F[e[a+E]]++]=E);if(0===t?(y=L=r,u=19):1===t?(y=lbase,k-=257,L=lext,Z-=257,u=256):(y=dbase,L=dext,u=-1),R=0,E=0,g=S,c=n,p=w,m=0,d=-1,f=(I=1<<w)-1,1===t&&I>852||2===t&&I>592)return 1;for(;;){O=g-m,r[E]<u?(D=0,M=r[E]):r[E]>u?(D=L[Z+r[E]],M=y[k+r[E]]):(D=96,M=0),o=1<<g-m,S=h=1<<p;do{s[c+(R>>m)+(h-=o)]=O<<24|D<<16|M|0}while(0!==h);for(o=1<<g-1;R&o;)o>>=1;if(0!==o?(R&=o-1,R+=o):R=0,E++,0==--T[g]){if(g===b)break;g=e[a+r[E]]}if(g>w&&(R&f)!==d){for(0===m&&(m=w),c+=S,A=1<<(p=g-m);p+m<b&&!((A-=T[p+m])<=0);)p++,A<<=1;if(I+=1<<p,1===t&&I>852||2===t&&I>592)return 1;s[d=R&f]=w<<24|p<<16|c-n|0}}return 0!==R&&(s[c+R]=g-m<<24|64<<16|0),_.bits=w,0};var inftrees=inflate_table;const CODES$1=0,LENS$1=1,DISTS$1=2,{Z_FINISH:Z_FINISH$2,Z_BLOCK:Z_BLOCK$1,Z_TREES:Z_TREES,Z_OK:Z_OK$2,Z_STREAM_END:Z_STREAM_END$2,Z_NEED_DICT:Z_NEED_DICT,Z_STREAM_ERROR:Z_STREAM_ERROR$1,Z_DATA_ERROR:Z_DATA_ERROR$1,Z_MEM_ERROR:Z_MEM_ERROR,Z_BUF_ERROR:Z_BUF_ERROR$1,Z_DEFLATED:Z_DEFLATED$2}=constants,HEAD=1,FLAGS=2,TIME=3,OS=4,EXLEN=5,EXTRA=6,NAME=7,COMMENT=8,HCRC=9,DICTID=10,DICT=11,TYPE$1=12,TYPEDO=13,STORED=14,COPY_=15,COPY=16,TABLE=17,LENLENS=18,CODELENS=19,LEN_=20,LEN=21,LENEXT=22,DIST=23,DISTEXT=24,MATCH=25,LIT=26,CHECK=27,LENGTH=28,DONE=29,BAD$1=30,MEM=31,SYNC=32,ENOUGH_LENS$1=852,ENOUGH_DISTS$1=592,MAX_WBITS$1=15,DEF_WBITS=15,zswap32=t=>(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24);function InflateState(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const inflateResetKeep=t=>{if(!t||!t.state)return Z_STREAM_ERROR$1;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=1,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(852),e.distcode=e.distdyn=new Int32Array(592),e.sane=1,e.back=-1,Z_OK$2},inflateReset=t=>{if(!t||!t.state)return Z_STREAM_ERROR$1;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,inflateResetKeep(t)},inflateReset2=(t,e)=>{let a;if(!t||!t.state)return Z_STREAM_ERROR$1;const i=t.state;return e<0?(a=0,e=-e):(a=1+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?Z_STREAM_ERROR$1:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=a,i.wbits=e,inflateReset(t))},inflateInit2=(t,e)=>{if(!t)return Z_STREAM_ERROR$1;const a=new InflateState;t.state=a,a.window=null;const i=inflateReset2(t,e);return i!==Z_OK$2&&(t.state=null),i},inflateInit=t=>inflateInit2(t,15);let lenfix,distfix,virgin=!0;const fixedtables=t=>{if(virgin){lenfix=new Int32Array(512),distfix=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(inftrees(1,t.lens,0,288,lenfix,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;inftrees(2,t.lens,0,32,distfix,0,t.work,{bits:5}),virgin=!1}t.lencode=lenfix,t.lenbits=9,t.distcode=distfix,t.distbits=5},updatewindow=(t,e,a,i)=>{let s;const n=t.state;return null===n.window&&(n.wsize=1<<n.wbits,n.wnext=0,n.whave=0,n.window=new Uint8Array(n.wsize)),i>=n.wsize?(n.window.set(e.subarray(a-n.wsize,a),0),n.wnext=0,n.whave=n.wsize):((s=n.wsize-n.wnext)>i&&(s=i),n.window.set(e.subarray(a-i,a-i+s),n.wnext),(i-=s)?(n.window.set(e.subarray(a-i,a),0),n.wnext=i,n.whave=n.wsize):(n.wnext+=s,n.wnext===n.wsize&&(n.wnext=0),n.whave<n.wsize&&(n.whave+=s))),0},inflate=(t,e)=>{let a,i,s,n,r,_,l,o,h,d,f,c,u,g,E,S,b,w,p,m,A,I,R=0;const y=new Uint8Array(4);let k,T;const F=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return Z_STREAM_ERROR$1;12===(a=t.state).mode&&(a.mode=13),r=t.next_out,s=t.output,l=t.avail_out,n=t.next_in,i=t.input,_=t.avail_in,o=a.hold,h=a.bits,d=_,f=l,I=Z_OK$2;t:for(;;)switch(a.mode){case 1:if(0===a.wrap){a.mode=13;break}for(;h<16;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}if(2&a.wrap&&35615===o){a.check=0,y[0]=255&o,y[1]=o>>>8&255,a.check=crc32_1(a.check,y,2,0),o=0,h=0,a.mode=2;break}if(a.flags=0,a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&o)<<8)+(o>>8))%31){t.msg="incorrect header check",a.mode=30;break}if((15&o)!==Z_DEFLATED$2){t.msg="unknown compression method",a.mode=30;break}if(h-=4,A=8+(15&(o>>>=4)),0===a.wbits)a.wbits=A;else if(A>a.wbits){t.msg="invalid window size",a.mode=30;break}a.dmax=1<<a.wbits,t.adler=a.check=1,a.mode=512&o?10:12,o=0,h=0;break;case 2:for(;h<16;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}if(a.flags=o,(255&a.flags)!==Z_DEFLATED$2){t.msg="unknown compression method",a.mode=30;break}if(57344&a.flags){t.msg="unknown header flags set",a.mode=30;break}a.head&&(a.head.text=o>>8&1),512&a.flags&&(y[0]=255&o,y[1]=o>>>8&255,a.check=crc32_1(a.check,y,2,0)),o=0,h=0,a.mode=3;case 3:for(;h<32;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}a.head&&(a.head.time=o),512&a.flags&&(y[0]=255&o,y[1]=o>>>8&255,y[2]=o>>>16&255,y[3]=o>>>24&255,a.check=crc32_1(a.check,y,4,0)),o=0,h=0,a.mode=4;case 4:for(;h<16;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}a.head&&(a.head.xflags=255&o,a.head.os=o>>8),512&a.flags&&(y[0]=255&o,y[1]=o>>>8&255,a.check=crc32_1(a.check,y,2,0)),o=0,h=0,a.mode=5;case 5:if(1024&a.flags){for(;h<16;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}a.length=o,a.head&&(a.head.extra_len=o),512&a.flags&&(y[0]=255&o,y[1]=o>>>8&255,a.check=crc32_1(a.check,y,2,0)),o=0,h=0}else a.head&&(a.head.extra=null);a.mode=6;case 6:if(1024&a.flags&&((c=a.length)>_&&(c=_),c&&(a.head&&(A=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(i.subarray(n,n+c),A)),512&a.flags&&(a.check=crc32_1(a.check,i,c,n)),_-=c,n+=c,a.length-=c),a.length))break t;a.length=0,a.mode=7;case 7:if(2048&a.flags){if(0===_)break t;c=0;do{A=i[n+c++],a.head&&A&&a.length<65536&&(a.head.name+=String.fromCharCode(A))}while(A&&c<_);if(512&a.flags&&(a.check=crc32_1(a.check,i,c,n)),_-=c,n+=c,A)break t}else a.head&&(a.head.name=null);a.length=0,a.mode=8;case 8:if(4096&a.flags){if(0===_)break t;c=0;do{A=i[n+c++],a.head&&A&&a.length<65536&&(a.head.comment+=String.fromCharCode(A))}while(A&&c<_);if(512&a.flags&&(a.check=crc32_1(a.check,i,c,n)),_-=c,n+=c,A)break t}else a.head&&(a.head.comment=null);a.mode=9;case 9:if(512&a.flags){for(;h<16;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}if(o!==(65535&a.check)){t.msg="header crc mismatch",a.mode=30;break}o=0,h=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),t.adler=a.check=0,a.mode=12;break;case 10:for(;h<32;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}t.adler=a.check=zswap32(o),o=0,h=0,a.mode=11;case 11:if(0===a.havedict)return t.next_out=r,t.avail_out=l,t.next_in=n,t.avail_in=_,a.hold=o,a.bits=h,Z_NEED_DICT;t.adler=a.check=1,a.mode=12;case 12:if(e===Z_BLOCK$1||e===Z_TREES)break t;case 13:if(a.last){o>>>=7&h,h-=7&h,a.mode=27;break}for(;h<3;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}switch(a.last=1&o,h-=1,3&(o>>>=1)){case 0:a.mode=14;break;case 1:if(fixedtables(a),a.mode=20,e===Z_TREES){o>>>=2,h-=2;break t}break;case 2:a.mode=17;break;case 3:t.msg="invalid block type",a.mode=30}o>>>=2,h-=2;break;case 14:for(o>>>=7&h,h-=7&h;h<32;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}if((65535&o)!=(o>>>16^65535)){t.msg="invalid stored block lengths",a.mode=30;break}if(a.length=65535&o,o=0,h=0,a.mode=15,e===Z_TREES)break t;case 15:a.mode=16;case 16:if(c=a.length){if(c>_&&(c=_),c>l&&(c=l),0===c)break t;s.set(i.subarray(n,n+c),r),_-=c,n+=c,l-=c,r+=c,a.length-=c;break}a.mode=12;break;case 17:for(;h<14;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}if(a.nlen=257+(31&o),o>>>=5,h-=5,a.ndist=1+(31&o),o>>>=5,h-=5,a.ncode=4+(15&o),o>>>=4,h-=4,a.nlen>286||a.ndist>30){t.msg="too many length or distance symbols",a.mode=30;break}a.have=0,a.mode=18;case 18:for(;a.have<a.ncode;){for(;h<3;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}a.lens[F[a.have++]]=7&o,o>>>=3,h-=3}for(;a.have<19;)a.lens[F[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,k={bits:a.lenbits},I=inftrees(0,a.lens,0,19,a.lencode,0,a.work,k),a.lenbits=k.bits,I){t.msg="invalid code lengths set",a.mode=30;break}a.have=0,a.mode=19;case 19:for(;a.have<a.nlen+a.ndist;){for(;S=(R=a.lencode[o&(1<<a.lenbits)-1])>>>16&255,b=65535&R,!((E=R>>>24)<=h);){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}if(b<16)o>>>=E,h-=E,a.lens[a.have++]=b;else{if(16===b){for(T=E+2;h<T;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}if(o>>>=E,h-=E,0===a.have){t.msg="invalid bit length repeat",a.mode=30;break}A=a.lens[a.have-1],c=3+(3&o),o>>>=2,h-=2}else if(17===b){for(T=E+3;h<T;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}h-=E,A=0,c=3+(7&(o>>>=E)),o>>>=3,h-=3}else{for(T=E+7;h<T;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}h-=E,A=0,c=11+(127&(o>>>=E)),o>>>=7,h-=7}if(a.have+c>a.nlen+a.ndist){t.msg="invalid bit length repeat",a.mode=30;break}for(;c--;)a.lens[a.have++]=A}}if(30===a.mode)break;if(0===a.lens[256]){t.msg="invalid code -- missing end-of-block",a.mode=30;break}if(a.lenbits=9,k={bits:a.lenbits},I=inftrees(1,a.lens,0,a.nlen,a.lencode,0,a.work,k),a.lenbits=k.bits,I){t.msg="invalid literal/lengths set",a.mode=30;break}if(a.distbits=6,a.distcode=a.distdyn,k={bits:a.distbits},I=inftrees(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,k),a.distbits=k.bits,I){t.msg="invalid distances set",a.mode=30;break}if(a.mode=20,e===Z_TREES)break t;case 20:a.mode=21;case 21:if(_>=6&&l>=258){t.next_out=r,t.avail_out=l,t.next_in=n,t.avail_in=_,a.hold=o,a.bits=h,inffast(t,f),r=t.next_out,s=t.output,l=t.avail_out,n=t.next_in,i=t.input,_=t.avail_in,o=a.hold,h=a.bits,12===a.mode&&(a.back=-1);break}for(a.back=0;S=(R=a.lencode[o&(1<<a.lenbits)-1])>>>16&255,b=65535&R,!((E=R>>>24)<=h);){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}if(S&&0==(240&S)){for(w=E,p=S,m=b;S=(R=a.lencode[m+((o&(1<<w+p)-1)>>w)])>>>16&255,b=65535&R,!(w+(E=R>>>24)<=h);){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}o>>>=w,h-=w,a.back+=w}if(o>>>=E,h-=E,a.back+=E,a.length=b,0===S){a.mode=26;break}if(32&S){a.back=-1,a.mode=12;break}if(64&S){t.msg="invalid literal/length code",a.mode=30;break}a.extra=15&S,a.mode=22;case 22:if(a.extra){for(T=a.extra;h<T;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}a.length+=o&(1<<a.extra)-1,o>>>=a.extra,h-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=23;case 23:for(;S=(R=a.distcode[o&(1<<a.distbits)-1])>>>16&255,b=65535&R,!((E=R>>>24)<=h);){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}if(0==(240&S)){for(w=E,p=S,m=b;S=(R=a.distcode[m+((o&(1<<w+p)-1)>>w)])>>>16&255,b=65535&R,!(w+(E=R>>>24)<=h);){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}o>>>=w,h-=w,a.back+=w}if(o>>>=E,h-=E,a.back+=E,64&S){t.msg="invalid distance code",a.mode=30;break}a.offset=b,a.extra=15&S,a.mode=24;case 24:if(a.extra){for(T=a.extra;h<T;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}a.offset+=o&(1<<a.extra)-1,o>>>=a.extra,h-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){t.msg="invalid distance too far back",a.mode=30;break}a.mode=25;case 25:if(0===l)break t;if(c=f-l,a.offset>c){if((c=a.offset-c)>a.whave&&a.sane){t.msg="invalid distance too far back",a.mode=30;break}c>a.wnext?(c-=a.wnext,u=a.wsize-c):u=a.wnext-c,c>a.length&&(c=a.length),g=a.window}else g=s,u=r-a.offset,c=a.length;c>l&&(c=l),l-=c,a.length-=c;do{s[r++]=g[u++]}while(--c);0===a.length&&(a.mode=21);break;case 26:if(0===l)break t;s[r++]=a.length,l--,a.mode=21;break;case 27:if(a.wrap){for(;h<32;){if(0===_)break t;_--,o|=i[n++]<<h,h+=8}if(f-=l,t.total_out+=f,a.total+=f,f&&(t.adler=a.check=a.flags?crc32_1(a.check,s,f,r-f):adler32_1(a.check,s,f,r-f)),f=l,(a.flags?o:zswap32(o))!==a.check){t.msg="incorrect data check",a.mode=30;break}o=0,h=0}a.mode=28;case 28:if(a.wrap&&a.flags){for(;h<32;){if(0===_)break t;_--,o+=i[n++]<<h,h+=8}if(o!==(4294967295&a.total)){t.msg="incorrect length check",a.mode=30;break}o=0,h=0}a.mode=29;case 29:I=Z_STREAM_END$2;break t;case 30:I=Z_DATA_ERROR$1;break t;case 31:return Z_MEM_ERROR;case 32:default:return Z_STREAM_ERROR$1}return t.next_out=r,t.avail_out=l,t.next_in=n,t.avail_in=_,a.hold=o,a.bits=h,(a.wsize||f!==t.avail_out&&a.mode<30&&(a.mode<27||e!==Z_FINISH$2))&&updatewindow(t,t.output,t.next_out,f-t.avail_out),d-=t.avail_in,f-=t.avail_out,t.total_in+=d,t.total_out+=f,a.total+=f,a.wrap&&f&&(t.adler=a.check=a.flags?crc32_1(a.check,s,f,t.next_out-f):adler32_1(a.check,s,f,t.next_out-f)),t.data_type=a.bits+(a.last?64:0)+(12===a.mode?128:0)+(20===a.mode||15===a.mode?256:0),(0===d&&0===f||e===Z_FINISH$2)&&I===Z_OK$2&&(I=Z_BUF_ERROR$1),I},inflateEnd=t=>{if(!t||!t.state)return Z_STREAM_ERROR$1;let e=t.state;return e.window&&(e.window=null),t.state=null,Z_OK$2},inflateGetHeader=(t,e)=>{if(!t||!t.state)return Z_STREAM_ERROR$1;const a=t.state;return 0==(2&a.wrap)?Z_STREAM_ERROR$1:(a.head=e,e.done=!1,Z_OK$2)},inflateSetDictionary=(t,e)=>{const a=e.length;let i,s,n;return t&&t.state?0!==(i=t.state).wrap&&11!==i.mode?Z_STREAM_ERROR$1:11===i.mode&&(s=adler32_1(s=1,e,a,0))!==i.check?Z_DATA_ERROR$1:(n=updatewindow(t,e,a,a))?(i.mode=31,Z_MEM_ERROR):(i.havedict=1,Z_OK$2):Z_STREAM_ERROR$1};var inflateReset_1=inflateReset,inflateReset2_1=inflateReset2,inflateResetKeep_1=inflateResetKeep,inflateInit_1=inflateInit,inflateInit2_1=inflateInit2,inflate_2=inflate,inflateEnd_1=inflateEnd,inflateGetHeader_1=inflateGetHeader,inflateSetDictionary_1=inflateSetDictionary,inflateInfo="pako inflate (from Nodeca project)",inflate_1={inflateReset:inflateReset_1,inflateReset2:inflateReset2_1,inflateResetKeep:inflateResetKeep_1,inflateInit:inflateInit_1,inflateInit2:inflateInit2_1,inflate:inflate_2,inflateEnd:inflateEnd_1,inflateGetHeader:inflateGetHeader_1,inflateSetDictionary:inflateSetDictionary_1,inflateInfo:inflateInfo};function GZheader(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var gzheader=GZheader;const toString$1=Object.prototype.toString,{Z_NO_FLUSH:Z_NO_FLUSH$2,Z_FINISH:Z_FINISH$3,Z_OK:Z_OK$3,Z_STREAM_END:Z_STREAM_END$3,Z_NEED_DICT:Z_NEED_DICT$1,Z_STREAM_ERROR:Z_STREAM_ERROR$2,Z_DATA_ERROR:Z_DATA_ERROR$2,Z_MEM_ERROR:Z_MEM_ERROR$1}=constants;function Inflate(t){this.options=common.assign({chunkSize:65536,windowBits:15,to:""},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let a=inflate_1.inflateInit2(this.strm,e.windowBits);if(a!==Z_OK$3)throw new Error(messages[a]);if(this.header=new gzheader,inflate_1.inflateGetHeader(this.strm,this.header),e.dictionary&&("string"==typeof e.dictionary?e.dictionary=strings.string2buf(e.dictionary):"[object ArrayBuffer]"===toString$1.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(a=inflate_1.inflateSetDictionary(this.strm,e.dictionary))!==Z_OK$3))throw new Error(messages[a])}Inflate.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize,s=this.options.dictionary;let n,r,_;if(this.ended)return!1;for(r=e===~~e?e:!0===e?Z_FINISH$3:Z_NO_FLUSH$2,"[object ArrayBuffer]"===toString$1.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;){for(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),(n=inflate_1.inflate(a,r))===Z_NEED_DICT$1&&s&&((n=inflate_1.inflateSetDictionary(a,s))===Z_OK$3?n=inflate_1.inflate(a,r):n===Z_DATA_ERROR$2&&(n=Z_NEED_DICT$1));a.avail_in>0&&n===Z_STREAM_END$3&&a.state.wrap>0&&0!==t[a.next_in];)inflate_1.inflateReset(a),n=inflate_1.inflate(a,r);switch(n){case Z_STREAM_ERROR$2:case Z_DATA_ERROR$2:case Z_NEED_DICT$1:case Z_MEM_ERROR$1:return this.onEnd(n),this.ended=!0,!1}if(_=a.avail_out,a.next_out&&(0===a.avail_out||n===Z_STREAM_END$3))if("string"===this.options.to){let t=strings.utf8border(a.output,a.next_out),e=a.next_out-t,s=strings.buf2string(a.output,t);a.next_out=e,a.avail_out=i-e,e&&a.output.set(a.output.subarray(t,t+e),0),this.onData(s)}else this.onData(a.output.length===a.next_out?a.output:a.output.subarray(0,a.next_out));if(n!==Z_OK$3||0!==_){if(n===Z_STREAM_END$3)return n=inflate_1.inflateEnd(this.strm),this.onEnd(n),this.ended=!0,!0;if(0===a.avail_in)break}}return!0},Inflate.prototype.onData=function(t){this.chunks.push(t)},Inflate.prototype.onEnd=function(t){t===Z_OK$3&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=common.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};const{Deflate:Deflate$1,deflate:deflate$2,deflateRaw:deflateRaw$1,gzip:gzip$1}=deflate_1$1;var deflate_1$2=deflate$2;class ESPLoader extends EventTarget{constructor(t,e,a){super(),this.port=t,this.logger=e,this._parent=a,this.chipName=null,this._efuses=new Array(4).fill(0),this._flashsize=4194304,this.debug=!1,this.IS_STUB=!1,this.connected=!0,this.flashSize=null}get _inputBuffer(){return this._parent?this._parent._inputBuffer:this.__inputBuffer}async initialize(){await this.hardReset(!0),this._parent||(this.__inputBuffer=[],this.readLoop()),await this.sync();let t,e=await this.readRegister(CHIP_DETECT_MAGIC_REG_ADDR),a=CHIP_DETECT_MAGIC_VALUES[e>>>0];if(void 0===a)throw new Error(`Unknown Chip: Hex: ${toHex(e>>>0,8).toLowerCase()} Number: ${e}`);this.chipName=a.name,this.chipFamily=a.family,this.chipFamily==CHIP_FAMILY_ESP8266?t=1072693328:this.chipFamily==CHIP_FAMILY_ESP32?t=1610719232:this.chipFamily==CHIP_FAMILY_ESP32S2&&(t=1610719232);for(let e=0;e<4;e++)this._efuses[e]=await this.readRegister(t+4*e);this.logger.log(`Chip type ${this.chipName}`)}async readLoop(){this.logger.debug("Starting read loop"),this._reader=this.port.readable.getReader();try{for(;;){const{value:t,done:e}=await this._reader.read();if(e){this._reader.releaseLock();break}t&&0!==t.length&&this._inputBuffer.push(...Array.from(t))}}catch(t){console.error("Read loop got disconnected"),this.connected=!1,this.dispatchEvent(new Event("disconnect"))}this.logger.debug("Finished read loop")}async hardReset(t=!1){this.logger.log("Try hard reset."),await this.port.setSignals({dataTerminalReady:!1,requestToSend:!0}),await this.port.setSignals({dataTerminalReady:t,requestToSend:!1}),await new Promise(t=>setTimeout(t,1e3))}macAddr(){let t,e=new Array(6).fill(0),a=this._efuses[0],i=this._efuses[1],s=this._efuses[2],n=this._efuses[3];if(this.chipFamily==CHIP_FAMILY_ESP8266){if(0!=n)t=[n>>16&255,n>>8&255,255&n];else if(0==(i>>16&255))t=[24,254,52];else{if(1!=(i>>16&255))throw new Error("Couldnt determine OUI");t=[172,208,116]}e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=i>>8&255,e[4]=255&i,e[5]=a>>24&255}else if(this.chipFamily==CHIP_FAMILY_ESP32)e[0]=s>>8&255,e[1]=255&s,e[2]=i>>24&255,e[3]=i>>16&255,e[4]=i>>8&255,e[5]=255&i;else{if(this.chipFamily!=CHIP_FAMILY_ESP32S2)throw new Error("Unknown chip family");e[0]=s>>8&255,e[1]=255&s,e[2]=i>>24&255,e[3]=i>>16&255,e[4]=i>>8&255,e[5]=255&i}return e}async readRegister(t){this.debug&&this.logger.debug("Reading Register",t);let e=pack("I",t),a=(await this.checkCommand(ESP_READ_REG,e))[0];return unpack("I",a)[0]}async checkCommand(t,e,a=0,i=DEFAULT_TIMEOUT){i=Math.min(i,MAX_TIMEOUT),await this.sendCommand(t,e,a);let[s,n]=await this.getResponse(t,i);if(null===n)throw new Error("Didn't get enough status bytes");let r=0;if(this.IS_STUB||this.chipFamily==CHIP_FAMILY_ESP8266?r=2:[CHIP_FAMILY_ESP32,CHIP_FAMILY_ESP32S2].includes(this.chipFamily)?r=4:[2,4].includes(n.length)&&(r=n.length),n.length<r)throw new Error("Didn't get enough status bytes");let _=n.slice(-r,n.length);if(n=n.slice(0,-r),this.debug&&(this.logger.debug("status",_),this.logger.debug("value",s),this.logger.debug("data",n)),1==_[0])throw _[1]==ROM_INVALID_RECV_MSG?new Error("Invalid (unsupported) command "+toHex(t)):new Error("Command failure error code "+toHex(_[1]));return[s,n]}async sendCommand(t,e,a=0){this._inputBuffer.length=0;let i=[192,0];i.push(t),(i=(i=(i=i.concat(pack("H",e.length))).concat(slipEncode(pack("I",a)))).concat(slipEncode(e))).push(192),this.debug&&this.logger.debug("Writing "+i.length+" byte"+(1==i.length?"":"s")+":",i),await this.writeToStream(i)}async getResponse(t,e=DEFAULT_TIMEOUT){let a=[],i=0,s=!1,n=Date.now();for(;Date.now()-n<e;){if(this._inputBuffer.length>0){let t=this._inputBuffer.shift();219==t?s=!0:s?(221==t?a.push(220):220==t?a.push(192):a=a.concat([219,t]),s=!1):a.push(t)}else await sleep(10);if(a.length>0&&192!=a[0]&&a.shift(),a.length>1&&1!=a[1]&&a.shift(),a.length>2&&a[2]!=t&&a.shift(),a.length>4&&(i=a[3]+(a[4]<<8)),a.length==i+10)break}if(a.length!=i+10)return this.logger.log("Timed out after "+e+" milliseconds"),[null,null];this.debug&&this.logger.debug("Reading "+a.length+" byte"+(1==a.length?"":"s")+":",a);let r=a.slice(5,9),_=a.slice(9,-1);return this.debug&&this.logger.debug("value:",r,"data:",_),[r,_]}async readBuffer(t=DEFAULT_TIMEOUT){let e=[],a=!1,i=Date.now();for(;Date.now()-i<t;){if(this._inputBuffer.length>0){let t=this._inputBuffer.shift();219==t?a=!0:a?(221==t?e.push(220):220==t?e.push(192):e=e.concat([219,t]),a=!1):e.push(t)}else await sleep(10);if(e.length>0&&192!=e[0]&&e.shift(),e.length>1&&192==e[e.length-1])break}if(e.length<2)return this.logger.log("Timed out after "+t+" milliseconds"),null;this.debug&&this.logger.debug("Reading "+e.length+" byte"+(1==e.length?"":"s")+":",e);let s=e.slice(1,-1);return this.debug&&this.logger.debug("data:",s),s}checksum(t,e=ESP_CHECKSUM_MAGIC){for(let a of t)e^=a;return e}async setBaudrate(t){if(this.chipFamily==CHIP_FAMILY_ESP8266)throw new Error("Changing baud rate is not supported on the ESP8266");this.logger.log("Attempting to change baud rate to "+t+"...");try{let e=pack("<II",t,this.IS_STUB?ESP_ROM_BAUD:0);await this.checkCommand(ESP_CHANGE_BAUDRATE,e)}catch(e){throw console.error(e),new Error(`Unable to change the baud rate to ${t}: No response from set baud rate command.`)}this._parent?await this._parent.reconfigurePort(t):await this.reconfigurePort(t)}async reconfigurePort(t){var e;try{await(null===(e=this._reader)||void 0===e?void 0:e.cancel()),await this.port.close(),await this.port.open({baudRate:t}),this.readLoop(),this.logger.log(`Changed baud rate to ${t}`)}catch(e){throw console.error(e),new Error(`Unable to change the baud rate to ${t}: ${e}`)}}async sync(){for(let t=0;t<5;t++){if(await this._sync())return await sleep(100),!0;await sleep(100)}throw new Error("Couldn't sync to ESP. Try resetting.")}async _sync(){await this.sendCommand(ESP_SYNC,SYNC_PACKET);for(let t=0;t<8;t++){let[t,e]=await this.getResponse(ESP_SYNC,SYNC_TIMEOUT);if(null!==e&&(e.length>1&&0==e[0]&&0==e[1]))return!0}return!1}getFlashWriteSize(){return this.IS_STUB?STUB_FLASH_WRITE_SIZE:FLASH_WRITE_SIZE}async flashData(t,e,a=0,i=!1){this.updateImageFlashParams(a,t);let s,n=t.byteLength,r=0;i?(r=(s=deflate_1$2(new Uint8Array(t),{level:9}).buffer).byteLength,this.logger.log(`Writing data with filesize: ${n}. Compressed Size: ${r}`),await this.flashDeflBegin(n,r,a)):(this.logger.log(`Writing data with filesize: ${n}`),s=t,await this.flashBegin(n,a));let _=[],l=0,o=0,h=0,d=Date.now(),f=this.getFlashWriteSize(),c=i?r:n;for(;c-h>0;)this.debug&&this.logger.log(`Writing at ${toHex(a+l*f,8)} `),c-h>=f?_=Array.from(new Uint8Array(s,h,f)):(_=Array.from(new Uint8Array(s,h,c-h)),i||(_=_.concat(new Array(f-_.length).fill(255)))),i?await this.flashDeflBlock(_,l,2e3):await this.flashBlock(_,l,2e3),l+=1,h+=f,e(o+=i?Math.round(_.length*n/r):_.length,c);this.logger.log("Took "+(Date.now()-d)+"ms to write "+c+" bytes"),this.IS_STUB&&(await this.flashBegin(0,0),i?await this.flashDeflFinish():await this.flashFinish())}async flashBlock(t,e,a=100){await this.checkCommand(ESP_FLASH_DATA,pack("<IIII",t.length,e,0,0).concat(t),this.checksum(t),a)}async flashDeflBlock(t,e,a=100){await this.checkCommand(ESP_FLASH_DEFL_DATA,pack("<IIII",t.length,e,0,0).concat(t),this.checksum(t))}async flashBegin(t=0,e=0,a=!1){let i,s,n=this.getFlashWriteSize();[CHIP_FAMILY_ESP32,CHIP_FAMILY_ESP32S2].includes(this.chipFamily)&&await this.checkCommand(ESP_SPI_ATTACH,new Array(8).fill(0)),this.chipFamily==CHIP_FAMILY_ESP32&&(s=pack("<IIIIII",0,this._flashsize,65536,4096,256,65535),await this.checkCommand(ESP_SPI_SET_PARAMS,s));let r,_=Math.floor((t+n-1)/n);i=this.chipFamily==CHIP_FAMILY_ESP8266?this.getEraseSize(e,t):t,r=this.IS_STUB?DEFAULT_TIMEOUT:timeoutPerMb(ERASE_REGION_TIMEOUT_PER_MB,t);let l=Date.now();return s=pack("<IIII",i,_,n,e),this.chipFamily==CHIP_FAMILY_ESP32S2&&(s=s.concat(pack("<I",a?1:0))),this.logger.log("Erase size "+i+", blocks "+_+", block size "+n+", offset "+toHex(e,4)+", encrypted "+(a?"yes":"no")),await this.checkCommand(ESP_FLASH_BEGIN,s,0,r),0==t||this.IS_STUB||this.logger.log("Took "+(Date.now()-l)+"ms to erase "+_+" bytes"),_}async flashDeflBegin(t=0,e=0,a=0,i=!1){let s,n=this.getFlashWriteSize(),r=Math.floor((e+n-1)/n),_=Math.floor((t+n-1)/n),l=0,o=0;return this.IS_STUB?(l=t,o=DEFAULT_TIMEOUT):o=timeoutPerMb(ERASE_REGION_TIMEOUT_PER_MB,l=_*n),s=pack("<IIII",l,r,n,a),await this.checkCommand(ESP_FLASH_DEFL_BEGIN,s,0,o),r}async flashFinish(){let t=pack("<I",1);await this.checkCommand(ESP_FLASH_END,t)}async flashDeflFinish(){let t=pack("<I",1);await this.checkCommand(ESP_FLASH_DEFL_END,t)}getBootloaderOffset(){var t;return this.chipFamily==CHIP_FAMILY_ESP32||(null===(t=this._parent)||void 0===t?void 0:t.chipFamily)==CHIP_FAMILY_ESP32?ESP32_BOOTLOADER_FLASH_OFFSET:BOOTLOADER_FLASH_OFFSET}updateImageFlashParams(t,e){if(e.byteLength<8)return e;var a=Array.from(new Uint8Array(e,0,4));let i=a[0],s=a[2],n=a[3];if(this.logger.debug(`Image header, Magic=${toHex(i)}, FlashMode=${toHex(s)}, FlashSizeFreq=${toHex(n)}`),t!=this.getBootloaderOffset())return e;if(i!=ESP_IMAGE_MAGIC)return this.logger.log("Warning: Image file at %s doesn't look like an image file, so not changing any flash settings.",toHex(t,4)),e;this.logger.log("Image being flashed is a bootloader");let r=FLASH_MODES.dio,_=FLASH_FREQUENCIES["40m"],l=getFlashSizes(this.getChipFamily())[this.flashSize?this.flashSize:"4MB"],o=pack("BB",r,l+_),h=new Uint8Array(e,2,2);return o[0]!=h[0]||o[1]!=h[1]?(h[0]=o[0],h[1]=o[1],this.logger.log(`Patching Flash parameters header bytes to ${toHex(o[0],2)} ${toHex(o[1],2)}`)):this.logger.log("Flash parameters header did not need patching."),e}async flashId(){return await this.runSpiFlashCommand(159,[],24)}getChipFamily(){return this._parent?this._parent.chipFamily:this.chipFamily}async writeRegister(t,e,a=4294967295,i=0,s=0){let n=pack("<IIII",t,e,a,i);s>0&&n.concat(pack("<IIII",getUartDateRegAddress(this.getChipFamily()),0,0,s)),await this.checkCommand(ESP_WRITE_REG,n)}async setDataLengths(t,e,a){if(-1!=t.mosiDlenOffs){let i=t.regBase+t.mosiDlenOffs,s=t.regBase+t.misoDlenOffs;e>0&&await this.writeRegister(i,e-1),a>0&&await this.writeRegister(s,a-1)}else{let i=t.regBase+t.usr1Offs,s=(0==a?0:a-1)<<8|(0==e?0:e-1)<<17;await this.writeRegister(i,s)}}async waitDone(t,e){for(let a=0;a<10;a++){if(0==(await this.readRegister(t)&e))return}throw Error("SPI command did not complete in time")}async runSpiFlashCommand(t,e,a=0){let i=getSpiFlashAddresses(this.getChipFamily()),s=i.regBase,n=s+0,r=s+i.usrOffs,_=s+i.usr2Offs,l=s+i.w0Offs;if(a>32)throw new Error("Reading more than 32 bits back from a SPI flash operation is unsupported");if(e.length>64)throw new Error("Writing more than 64 bytes of data with one SPI command is unsupported");let o=8*e.length,h=await this.readRegister(r),d=await this.readRegister(_),f=1<<31;if(a>0&&(f|=1<<28),o>0&&(f|=1<<27),await this.setDataLengths(i,o,a),await this.writeRegister(r,f),await this.writeRegister(_,7<<28|t),0==o)await this.writeRegister(l,0);else{e.concat(new Array(e.length%4).fill(0));let t=unpack("I".repeat(Math.floor(e.length/4)),e),a=l;this.logger.debug(`Words Length: ${t.length}`);for(const e of t)this.logger.debug(`Writing word ${toHex(e)} to register offset ${toHex(a)}`),await this.writeRegister(a,e),a+=4}await this.writeRegister(n,1<<18),await this.waitDone(n,1<<18);let c=await this.readRegister(l);return await this.writeRegister(r,h),await this.writeRegister(_,d),c}async detectFlashSize(){this.logger.log("Detecting Flash Size");let t=await this.flashId(),e=255&t,a=t>>16&255;this.logger.debug(`FlashId: ${toHex(t)}`),this.logger.log(`Flash Manufacturer: ${e.toString(16)}`),this.logger.log(`Flash Device: ${(t>>8&255).toString(16)}${a.toString(16)}`),this.flashSize=DETECTED_FLASH_SIZES[a],this.logger.log(`Auto-detected Flash size: ${this.flashSize}`)}getEraseSize(t,e){let a=FLASH_SECTOR_SIZE,i=Math.floor((e+a-1)/a),s=16-Math.floor(t/a)%16;return i<s&&(s=i),i<2*s?Math.floor((i+1)/2*a):(i-s)*a}async memBegin(t,e,a,i){return await this.checkCommand(ESP_MEM_BEGIN,pack("<IIII",t,e,a,i))}async memBlock(t,e){return await this.checkCommand(ESP_MEM_DATA,pack("<IIII",t.length,e,0,0).concat(t),this.checksum(t))}async memFinish(t=0){let e=this.IS_STUB?DEFAULT_TIMEOUT:MEM_END_ROM_TIMEOUT,a=pack("<II",0==t?1:0,t);return await this.checkCommand(ESP_MEM_END,a,0,e)}async runStub(){const t=await getStubCode(this.chipFamily);let e=USB_RAM_BLOCK;this.logger.log("Uploading stub...");for(let a of["text","data"])if(Object.keys(t).includes(a)){let i=t[a+"_start"],s=t[a].length,n=Math.floor((s+e-1)/e);await this.memBegin(s,n,e,i);for(let i of Array(n).keys()){let n=i*e,r=n+e;r>s&&(r=s),await this.memBlock(t[a].slice(n,r),i)}}this.logger.log("Running stub..."),await this.memFinish(t.entry);const a=await this.readBuffer(100),i=String.fromCharCode(...a);if("OHAI"!=i)throw new Error("Failed to start stub. Unexpected response: "+i);this.logger.log("Stub is now running...");const s=new EspStubLoader(this.port,this.logger,this);return await s.detectFlashSize(),s}async writeToStream(t){const e=this.port.writable.getWriter();await e.write(new Uint8Array(t));try{e.releaseLock()}catch(t){console.error("Ignoring release lock error",t)}}async disconnect(){this._parent?await this._parent.disconnect():(this._reader&&await this._reader.cancel(),await this.port.writable.getWriter().close(),await this.port.close(),this.connected=!1)}}class EspStubLoader extends ESPLoader{constructor(){super(...arguments),this.IS_STUB=!0}async memBegin(t,e,a,i){let s=await getStubCode(this.chipFamily),n=i,r=i+t;console.log(n,r),console.log(s.data_start,s.data.length,s.text_start,s.text.length);for(let[t,e]of[[s.data_start,s.data_start+s.data.length],[s.text_start,s.text_start+s.text.length]])if(n<e&&r>t)throw new Error("Software loader is resident at "+toHex(t,8)+"-"+toHex(e,8)+". Can't load binary at overlapping address range "+toHex(n,8)+"-"+toHex(r,8)+". Try changing the binary loading address.")}async eraseFlash(){await this.checkCommand(ESP_ERASE_FLASH,[],0,CHIP_ERASE_TIMEOUT)}}const connect=async(t,e)=>(e.log("Connecting..."),await t.open({baudRate:ESP_ROM_BAUD}),e.log("Connected successfully."),new ESPLoader(t,e));export{CHIP_FAMILY_ESP32,CHIP_FAMILY_ESP32C3,CHIP_FAMILY_ESP32S2,CHIP_FAMILY_ESP8266,ESPLoader,connect};